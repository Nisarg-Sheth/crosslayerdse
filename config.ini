[Output_data]

#path of the directory to store to the output in
output_dir: ./trial_results
print_output: True
cons_output: ./cons

[GA_type]
# options of the type of Meta-Heuristic strategy to be used

# This option can be used to make the choice between the normal GA and Repair strategy based GA
# normal_GA - This option can be used to run the DSE with normal GA
# dpll_GA - This option can be used to run the DSE with the Repair strategy based approach
# both - This option enables runs with both DSE runs and compares the outputs
# default value for this parameter is 'both'
run_type: both

# This option is used to select between the kind of objectives to run the DSE for
# energy - This option corresponds to a unconstrained run with energy as the single objective
# time - This option corresponds to a unconstrained run with time as the single objective
# unconstrained - This option corresponds to unconstrained DSE run with multiple objectives
# constrained - This option corresponds to energy constrained or time constrained run with multiple objectives.
#default value is 'constrained'
objective_type: constrained

#enabling baseline takes values true and false
baseline_enabled: False
# energy baseline in uW
#baseline_value_energy: 200
# Time in uS
#baseline_value_time: 3000

#Option only used for constrained meta-heuristic
# Value of user constraint with respect to minimum value of a particular objective
# currently unused
# if objective scale is 0, the constraints are not considered.
objective_scale_energy: 3
objective_scale_time: 0



[Input_data]

# task graph to use
# e3s - E3S benchmark to be used
# synthetic - Synthetic Task graph used
tgff: e3s
# number of tasks in synthetic task graph
num_tasks: 25
#
e3s_path: ./a.tgff
# The path to the tgff binary
tgff_path: ./tgff-3.6/tgff
# The output directory for the artificial task graph
output_path: ./tg_generated
# Name of the artificial task graph generated
output_name: tg_20
#Value of seed used by the tgff generator
seed_value: 6414
#path of the template file for the tgff template
template: ./template.tgff

[PE_data]

# The length of the NOC
length: 2
#The breadth of the NOC
breadth: 2
#List to determine which PE in the list is
#Select the PE_type corresponding to each value in the PE_list
# 1 - AMD 133 Mhz core
# 2 - AMD 400 Mhz core
# 3 - AMD 500 Mhz core
# 4 - IBM 266 Mhz core
# 5 - IBM 500 Mhz core
# 6 - NEC VR 5432 167 Mhz core
#The following array is a flattened array which represents a NxM matrix
#The values in this list can take any value from 1 to 6
PE_matrix: (1,2,1,2)

[Cross_Layer_parameters]

#Number of DVFS levels
num_dvfs: 8
#Number of implementations of each task
num_implementations: 1

[Meta_data]
# Number of individuals in each generation for single objective optimization
single_ind: 10
#Number of individuals in each generation for multi-objective optimization
multi_ind: 10
# Number of Generations of in the DSE
gen: 5
